{"ast":null,"code":"var _jsxFileName = \"/Users/roberttiu/Progetti/jammming/src/components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Playlist from '../Playlist/Playlist';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'Faith',\n        artist: 'Swae Lee',\n        album: 'Creed 2',\n        id: 1,\n        uri: 'uri1'\n      }, {\n        name: 'Still Be Friends',\n        artist: 'Tyga, G-Eazy, Tory Lanez',\n        album: 'Single',\n        id: 2,\n        uri: 'uri2'\n      }],\n      playlistName: 'My Playlist name',\n      playlistTracks: [{\n        name: 'testname',\n        artist: 'testartist',\n        album: 'testalbum',\n        id: 0,\n        uri: 'uri0'\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.changePlaylistName = this.changePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  addTrack(track) {\n    let isInPlaylistTracks = false;\n    this.state.playlistTracks.forEach(trackObj => {\n      if (trackObj.id === track.id) isInPlaylistTracks = true;\n    });\n\n    if (!isInPlaylistTracks) {\n      this.setState({\n        playlistTracks: [...this.state.playlistTracks, track]\n      });\n      isInPlaylistTracks = false;\n    }\n  }\n\n  removeTrack(track) {\n    let newObjArray = this.state.playlistTracks.filter(trackObj => trackObj.id !== track.id);\n    this.setState({\n      playlistTracks: newObjArray\n    });\n  }\n\n  changePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onChange: this.changePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/roberttiu/Progetti/jammming/src/components/App/App.js"],"names":["React","SearchResults","SearchBar","Playlist","App","Component","constructor","props","state","searchResults","name","artist","album","id","uri","playlistName","playlistTracks","addTrack","bind","removeTrack","changePlaylistName","savePlaylist","track","isInPlaylistTracks","forEach","trackObj","setState","newObjArray","filter","trackURIs","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Playlist from '../Playlist/Playlist';\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      searchResults: [\n        {\n          name: 'Faith',\n          artist: 'Swae Lee',\n          album: 'Creed 2',\n          id: 1,\n          uri: 'uri1',\n        },\n        {\n          name: 'Still Be Friends',\n          artist: 'Tyga, G-Eazy, Tory Lanez',\n          album: 'Single',\n          id: 2,\n          uri: 'uri2',\n        }\n      ],\n\n      playlistName: 'My Playlist name',\n\n      playlistTracks: [\n        {\n          name: 'testname',\n          artist: 'testartist',\n          album: 'testalbum',\n          id: 0,\n          uri: 'uri0',\n        }\n      ]\n    }\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.changePlaylistName = this.changePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n\n  }\n\n  addTrack(track) {\n    let isInPlaylistTracks = false;\n    this.state.playlistTracks.forEach(trackObj => {\n      if (trackObj.id === track.id) isInPlaylistTracks = true;\n    });\n\n    if (!isInPlaylistTracks) {\n      this.setState({ playlistTracks: [...this.state.playlistTracks, track] });\n      isInPlaylistTracks = false;\n    }\n  }\n\n  removeTrack(track) {\n    let newObjArray = this.state.playlistTracks.filter(trackObj => trackObj.id !== track.id);\n    this.setState({ playlistTracks: newObjArray });\n  }\n\n  changePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist \n            playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} \n            onRemove={this.removeTrack} onChange={this.changePlaylistName} onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}