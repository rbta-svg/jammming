{"ast":null,"code":"import _toConsumableArray from\"/Users/roberttiu/Progetti/jammming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/roberttiu/Progetti/jammming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/roberttiu/Progetti/jammming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/roberttiu/Progetti/jammming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/roberttiu/Progetti/jammming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/roberttiu/Progetti/jammming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./App.css';import SearchResults from'../SearchResults/SearchResults';import SearchBar from'../SearchBar/SearchBar';import Playlist from'../Playlist/Playlist';import Spotify from'/Users/roberttiu/Progetti/jammming/src/util/Spotify/Spotify.js';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={searchResults:[],playlistName:'My new playlist',playlistTracks:[]};_this.addTrack=_this.addTrack.bind(_assertThisInitialized(_this));_this.removeTrack=_this.removeTrack.bind(_assertThisInitialized(_this));_this.changePlaylistName=_this.changePlaylistName.bind(_assertThisInitialized(_this));_this.savePlaylist=_this.savePlaylist.bind(_assertThisInitialized(_this));_this.search=_this.search.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"addTrack\",value:function addTrack(track){var isInPlaylistTracks=false;this.state.playlistTracks.forEach(function(trackObj){if(trackObj.id===track.id)isInPlaylistTracks=true;});if(!isInPlaylistTracks){this.setState({playlistTracks:[].concat(_toConsumableArray(this.state.playlistTracks),[track])});isInPlaylistTracks=false;}}},{key:\"removeTrack\",value:function removeTrack(track){var newObjArray=this.state.playlistTracks.filter(function(trackObj){return trackObj.id!==track.id;});this.setState({playlistTracks:newObjArray});}},{key:\"changePlaylistName\",value:function changePlaylistName(name){this.setState({playlistName:name});}},{key:\"savePlaylist\",value:function savePlaylist(){var _this2=this;var trackURIs=this.state.playlistTracks.map(function(track){return track.uri;});Spotify.savePlaylist(this.state.playlistName,trackURIs).then(function(resolvedPromise){_this2.setState({playlistName:'My new Playlist',playlistTracks:[]});});}},{key:\"search\",value:function search(searchTerm){var _this3=this;if(searchTerm){Spotify.search(searchTerm).then(function(value){_this3.setState({searchResults:value});});}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Ja\",/*#__PURE__*/React.createElement(\"span\",{className:\"highlight\"},\"mmm\"),\"ing\"),/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(SearchBar,{onSearch:this.search}),/*#__PURE__*/React.createElement(\"div\",{className:\"App-playlist\"},/*#__PURE__*/React.createElement(SearchResults,{searchResults:this.state.searchResults,onAdd:this.addTrack}),/*#__PURE__*/React.createElement(Playlist,{playlistName:this.state.playlistName,playlistTracks:this.state.playlistTracks,onRemove:this.removeTrack,onChange:this.changePlaylistName,onSave:this.savePlaylist}))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/roberttiu/Progetti/jammming/src/components/App/App.js"],"names":["React","SearchResults","SearchBar","Playlist","Spotify","App","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","changePlaylistName","savePlaylist","search","track","isInPlaylistTracks","forEach","trackObj","id","setState","newObjArray","filter","name","trackURIs","map","uri","then","resolvedPromise","searchTerm","value","Component"],"mappings":"85BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gEAApB,C,GAEMC,CAAAA,G,sGAEJ,aAAYC,KAAZ,CAAmB,qCAEjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CAEXC,aAAa,CAAE,EAFJ,CAIXC,YAAY,CAAE,iBAJH,CAMXC,cAAc,CAAE,EANL,CAAb,CAUA,MAAKC,QAAL,CAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB,CACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB,CACA,MAAKE,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBF,IAAxB,+BAA1B,CACA,MAAKG,YAAL,CAAoB,MAAKA,YAAL,CAAkBH,IAAlB,+BAApB,CACA,MAAKI,MAAL,CAAc,MAAKA,MAAL,CAAYJ,IAAZ,+BAAd,CAlBiB,aAoBlB,C,0DAEQK,K,CAAO,CACd,GAAIC,CAAAA,kBAAkB,CAAG,KAAzB,CAEA,KAAKX,KAAL,CAAWG,cAAX,CAA0BS,OAA1B,CAAkC,SAAAC,QAAQ,CAAI,CAC5C,GAAIA,QAAQ,CAACC,EAAT,GAAgBJ,KAAK,CAACI,EAA1B,CAA8BH,kBAAkB,CAAG,IAArB,CAC/B,CAFD,EAKA,GAAI,CAACA,kBAAL,CAAyB,CACvB,KAAKI,QAAL,CAAc,CAAEZ,cAAc,8BAAM,KAAKH,KAAL,CAAWG,cAAjB,GAAiCO,KAAjC,EAAhB,CAAd,EACAC,kBAAkB,CAAG,KAArB,CACD,CACF,C,gDAEWD,K,CAAO,CACjB,GAAIM,CAAAA,WAAW,CAAG,KAAKhB,KAAL,CAAWG,cAAX,CAA0Bc,MAA1B,CAAiC,SAAAJ,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBJ,KAAK,CAACI,EAA1B,EAAzC,CAAlB,CACA,KAAKC,QAAL,CAAc,CAAEZ,cAAc,CAAEa,WAAlB,CAAd,EACD,C,8DAEkBE,I,CAAM,CACvB,KAAKH,QAAL,CAAc,CAAEb,YAAY,CAAEgB,IAAhB,CAAd,EACD,C,mDAEc,iBACb,GAAIC,CAAAA,SAAS,CAAG,KAAKnB,KAAL,CAAWG,cAAX,CAA0BiB,GAA1B,CAA8B,SAAAV,KAAK,QAAIA,CAAAA,KAAK,CAACW,GAAV,EAAnC,CAAhB,CACAxB,OAAO,CAACW,YAAR,CAAqB,KAAKR,KAAL,CAAWE,YAAhC,CAA8CiB,SAA9C,EACCG,IADD,CACM,SAAAC,eAAe,CAAI,CACvB,MAAI,CAACR,QAAL,CAAe,CAACb,YAAY,CAAE,iBAAf,CAAkCC,cAAc,CAAE,EAAlD,CAAf,EACD,CAHD,EAID,C,sCAEMqB,U,CAAY,iBACjB,GAAGA,UAAH,CAAe,CACb3B,OAAO,CAACY,MAAR,CAAee,UAAf,EAA2BF,IAA3B,CAAgC,SAAAG,KAAK,CAAI,CACvC,MAAI,CAACV,QAAL,CAAc,CAAEd,aAAa,CAAEwB,KAAjB,CAAd,EACD,CAFD,EAGD,CACF,C,uCAEQ,CACP,mBACE,4CACE,gDAAM,4BAAM,SAAS,CAAC,WAAhB,QAAN,OADF,cAEE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,SAAD,EAAW,QAAQ,CAAE,KAAKhB,MAA1B,EADF,cAEE,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,aAAD,EAAe,aAAa,CAAE,KAAKT,KAAL,CAAWC,aAAzC,CAAwD,KAAK,CAAE,KAAKG,QAApE,EADF,cAEE,oBAAC,QAAD,EACE,YAAY,CAAE,KAAKJ,KAAL,CAAWE,YAD3B,CACyC,cAAc,CAAE,KAAKF,KAAL,CAAWG,cADpE,CAEE,QAAQ,CAAE,KAAKG,WAFjB,CAE8B,QAAQ,CAAE,KAAKC,kBAF7C,CAEiE,MAAM,CAAE,KAAKC,YAF9E,EAFF,CAFF,CAFF,CADF,CAeD,C,iBA/Eef,KAAK,CAACiC,S,EAkFxB,cAAe5B,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '/Users/roberttiu/Progetti/jammming/src/util/Spotify/Spotify.js';\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      searchResults: [],\n\n      playlistName: 'My new playlist',\n\n      playlistTracks: []\n    }\n\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.changePlaylistName = this.changePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n\n  }\n\n  addTrack(track) {\n    let isInPlaylistTracks = false;\n\n    this.state.playlistTracks.forEach(trackObj => {\n      if (trackObj.id === track.id) isInPlaylistTracks = true;\n    });\n\n\n    if (!isInPlaylistTracks) {\n      this.setState({ playlistTracks: [...this.state.playlistTracks, track] });\n      isInPlaylistTracks = false;\n    }\n  }\n\n  removeTrack(track) {\n    let newObjArray = this.state.playlistTracks.filter(trackObj => trackObj.id !== track.id);\n    this.setState({ playlistTracks: newObjArray });\n  }\n\n  changePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackURIs)\n    .then(resolvedPromise => {\n      this.setState( {playlistName: 'My new Playlist', playlistTracks: [] }) \n    });\n  }\n\n  search(searchTerm) {\n    if(searchTerm) {\n      Spotify.search(searchTerm).then(value => {\n        this.setState({ searchResults: value })\n      });\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist\n              playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack} onChange={this.changePlaylistName} onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}