{"ast":null,"code":"var _jsxFileName = \"/Users/roberttiu/Progetti/jammming/src/components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '/Users/roberttiu/Progetti/jammming/src/util/Spotify/Spotify.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My new playlist',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.changePlaylistName = this.changePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let isInPlaylistTracks = false;\n    this.state.playlistTracks.forEach(trackObj => {\n      if (trackObj.id === track.id) isInPlaylistTracks = true;\n    });\n\n    if (!isInPlaylistTracks) {\n      this.setState({\n        playlistTracks: [...this.state.playlistTracks, track]\n      });\n      isInPlaylistTracks = false;\n    }\n  }\n\n  removeTrack(track) {\n    let newObjArray = this.state.playlistTracks.filter(trackObj => trackObj.id !== track.id);\n    this.setState({\n      playlistTracks: newObjArray\n    });\n  }\n\n  changePlaylistName(name) {\n    console.log(this.state.playlistName);\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackURIs).then(resolvedPromise => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(searchTerm) {\n    let arr;\n\n    if (searchTerm) {\n      Spotify.search(searchTerm).then(value => {\n        arr = value;\n        this.setState({\n          searchResults: arr\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onChange: this.changePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/roberttiu/Progetti/jammming/src/components/App/App.js"],"names":["React","SearchResults","SearchBar","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","changePlaylistName","savePlaylist","search","track","isInPlaylistTracks","forEach","trackObj","id","setState","newObjArray","filter","name","console","log","trackURIs","map","uri","then","resolvedPromise","searchTerm","arr","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '/Users/roberttiu/Progetti/jammming/src/util/Spotify/Spotify.js';\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      searchResults: [],\n\n      playlistName: 'My new playlist',\n\n      playlistTracks: []\n    }\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.changePlaylistName = this.changePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n\n  }\n\n  addTrack(track) {\n    let isInPlaylistTracks = false;\n    this.state.playlistTracks.forEach(trackObj => {\n      if (trackObj.id === track.id) isInPlaylistTracks = true;\n    });\n\n    if (!isInPlaylistTracks) {\n      this.setState({ playlistTracks: [...this.state.playlistTracks, track] });\n      isInPlaylistTracks = false;\n    }\n  }\n\n  removeTrack(track) {\n    let newObjArray = this.state.playlistTracks.filter(trackObj => trackObj.id !== track.id);\n    this.setState({ playlistTracks: newObjArray });\n  }\n\n  changePlaylistName(name) {\n    console.log(this.state.playlistName)\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n\n    Spotify.savePlaylist(this.state.playlistName, trackURIs)\n    .then(resolvedPromise => {\n      this.setState( {playlistName: 'New Playlist', playlistTracks: [] }) \n    });\n  }\n\n  search(searchTerm) {\n    let arr;\n    if(searchTerm) {\n      Spotify.search(searchTerm).then(value => {\n        arr = value;\n        this.setState({ searchResults: arr })\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist\n              playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack} onChange={this.changePlaylistName} onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}